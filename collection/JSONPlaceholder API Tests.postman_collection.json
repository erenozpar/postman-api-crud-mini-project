{
	"info": {
		"_postman_id": "d12530fa-40bf-4f87-899f-c210614d0623",
		"name": "JSONPlaceholder API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40056304"
	},
	"item": [
		{
			"name": "GET All Posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has 100 users\",function(){\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.length).to.eql(100);\r",
							"});\r",
							"\r",
							"pm.test(\"Each user has id, title, body\",function(){\r",
							"let users = pm.response.json();\r",
							"users.forEach(function(user){\r",
							"    pm.expect(user).to.have.property(\"id\");\r",
							"    pm.expect(user).to.have.property(\"title\");\r",
							"    pm.expect(user).to.have.property(\"body\");\r",
							"});\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Posts by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User has id, title, body\", function(){\r",
							"    let user = pm.response.json();\r",
							"   \r",
							"    pm.expect(user).to.have.property(\"id\");\r",
							"    pm.expect(user).to.have.property(\"title\");\r",
							"    pm.expect(user).to.have.property(\"body\");\r",
							"})\r",
							"\r",
							"pm.test(\"User id is 1\", function(){\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.equal(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"userId\", \"1\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Comments",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"userId\", 9)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Assert that the response body contains the correct postId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    const postId = pm.request.postId;\r",
							"    \r",
							"    pm.expect(jsonData.postId).to.eql(postId);\r",
							"})\r",
							"pm.test(\"Assert that the response body is an array\", function () {\r",
							"\r",
							"    pm.expect(pm.response.json()).to.be.an('array');\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/{{userId}}/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{userId}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Comments by PostId",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"userId\", \"100\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.have.below(200);\r",
							"});\r",
							"pm.test(\"Response postId is 100\", function () {\r",
							"    var expectedPostId = 100;\r",
							"    var jsonData = pm.response.json();\r",
							"    jsonData.forEach(function (item) {\r",
							"        pm.expect(item.postId).to.eql(expectedPostId);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/comments?postId={{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\",function(){\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Response body has correct userId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.equal(101);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n \"userId\": 101,\r\n        \"id\": 101,\r\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"userId\",\"98\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"pm.test(\"Response time is less than 200 ms\",function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"})\r",
							"pm.test"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"userId\": 101,\r\n        \"id\": 101,\r\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit as Eren\",\r\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Post by userId",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"userId\", \"1\"); // Set the userId environment variable to \"1\""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"userId\": 101,\r\n        \"id\": 101,\r\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit as Eren\",\r\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts/{{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}